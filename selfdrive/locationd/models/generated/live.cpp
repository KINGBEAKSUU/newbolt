#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3693999405139314794) {
   out_3693999405139314794[0] = 0;
   out_3693999405139314794[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3693999405139314794[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3693999405139314794[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3693999405139314794[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3693999405139314794[5] = -sin(in_vec[1]);
   out_3693999405139314794[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3693999405139314794[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3693999405139314794[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3693999405139314794[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3693999405139314794[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3693999405139314794[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3693999405139314794[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3693999405139314794[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3693999405139314794[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3693999405139314794[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3693999405139314794[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3693999405139314794[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3414598820419176679) {
   out_3414598820419176679[0] = delta_x[0] + nom_x[0];
   out_3414598820419176679[1] = delta_x[1] + nom_x[1];
   out_3414598820419176679[2] = delta_x[2] + nom_x[2];
   out_3414598820419176679[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3414598820419176679[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3414598820419176679[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3414598820419176679[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3414598820419176679[7] = delta_x[6] + nom_x[7];
   out_3414598820419176679[8] = delta_x[7] + nom_x[8];
   out_3414598820419176679[9] = delta_x[8] + nom_x[9];
   out_3414598820419176679[10] = delta_x[9] + nom_x[10];
   out_3414598820419176679[11] = delta_x[10] + nom_x[11];
   out_3414598820419176679[12] = delta_x[11] + nom_x[12];
   out_3414598820419176679[13] = delta_x[12] + nom_x[13];
   out_3414598820419176679[14] = delta_x[13] + nom_x[14];
   out_3414598820419176679[15] = delta_x[14] + nom_x[15];
   out_3414598820419176679[16] = delta_x[15] + nom_x[16];
   out_3414598820419176679[17] = delta_x[16] + nom_x[17];
   out_3414598820419176679[18] = delta_x[17] + nom_x[18];
   out_3414598820419176679[19] = delta_x[18] + nom_x[19];
   out_3414598820419176679[20] = delta_x[19] + nom_x[20];
   out_3414598820419176679[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5364111469669926070) {
   out_5364111469669926070[0] = -nom_x[0] + true_x[0];
   out_5364111469669926070[1] = -nom_x[1] + true_x[1];
   out_5364111469669926070[2] = -nom_x[2] + true_x[2];
   out_5364111469669926070[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5364111469669926070[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5364111469669926070[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5364111469669926070[6] = -nom_x[7] + true_x[7];
   out_5364111469669926070[7] = -nom_x[8] + true_x[8];
   out_5364111469669926070[8] = -nom_x[9] + true_x[9];
   out_5364111469669926070[9] = -nom_x[10] + true_x[10];
   out_5364111469669926070[10] = -nom_x[11] + true_x[11];
   out_5364111469669926070[11] = -nom_x[12] + true_x[12];
   out_5364111469669926070[12] = -nom_x[13] + true_x[13];
   out_5364111469669926070[13] = -nom_x[14] + true_x[14];
   out_5364111469669926070[14] = -nom_x[15] + true_x[15];
   out_5364111469669926070[15] = -nom_x[16] + true_x[16];
   out_5364111469669926070[16] = -nom_x[17] + true_x[17];
   out_5364111469669926070[17] = -nom_x[18] + true_x[18];
   out_5364111469669926070[18] = -nom_x[19] + true_x[19];
   out_5364111469669926070[19] = -nom_x[20] + true_x[20];
   out_5364111469669926070[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8664355600254952032) {
   out_8664355600254952032[0] = 1.0;
   out_8664355600254952032[1] = 0;
   out_8664355600254952032[2] = 0;
   out_8664355600254952032[3] = 0;
   out_8664355600254952032[4] = 0;
   out_8664355600254952032[5] = 0;
   out_8664355600254952032[6] = 0;
   out_8664355600254952032[7] = 0;
   out_8664355600254952032[8] = 0;
   out_8664355600254952032[9] = 0;
   out_8664355600254952032[10] = 0;
   out_8664355600254952032[11] = 0;
   out_8664355600254952032[12] = 0;
   out_8664355600254952032[13] = 0;
   out_8664355600254952032[14] = 0;
   out_8664355600254952032[15] = 0;
   out_8664355600254952032[16] = 0;
   out_8664355600254952032[17] = 0;
   out_8664355600254952032[18] = 0;
   out_8664355600254952032[19] = 0;
   out_8664355600254952032[20] = 0;
   out_8664355600254952032[21] = 0;
   out_8664355600254952032[22] = 1.0;
   out_8664355600254952032[23] = 0;
   out_8664355600254952032[24] = 0;
   out_8664355600254952032[25] = 0;
   out_8664355600254952032[26] = 0;
   out_8664355600254952032[27] = 0;
   out_8664355600254952032[28] = 0;
   out_8664355600254952032[29] = 0;
   out_8664355600254952032[30] = 0;
   out_8664355600254952032[31] = 0;
   out_8664355600254952032[32] = 0;
   out_8664355600254952032[33] = 0;
   out_8664355600254952032[34] = 0;
   out_8664355600254952032[35] = 0;
   out_8664355600254952032[36] = 0;
   out_8664355600254952032[37] = 0;
   out_8664355600254952032[38] = 0;
   out_8664355600254952032[39] = 0;
   out_8664355600254952032[40] = 0;
   out_8664355600254952032[41] = 0;
   out_8664355600254952032[42] = 0;
   out_8664355600254952032[43] = 0;
   out_8664355600254952032[44] = 1.0;
   out_8664355600254952032[45] = 0;
   out_8664355600254952032[46] = 0;
   out_8664355600254952032[47] = 0;
   out_8664355600254952032[48] = 0;
   out_8664355600254952032[49] = 0;
   out_8664355600254952032[50] = 0;
   out_8664355600254952032[51] = 0;
   out_8664355600254952032[52] = 0;
   out_8664355600254952032[53] = 0;
   out_8664355600254952032[54] = 0;
   out_8664355600254952032[55] = 0;
   out_8664355600254952032[56] = 0;
   out_8664355600254952032[57] = 0;
   out_8664355600254952032[58] = 0;
   out_8664355600254952032[59] = 0;
   out_8664355600254952032[60] = 0;
   out_8664355600254952032[61] = 0;
   out_8664355600254952032[62] = 0;
   out_8664355600254952032[63] = 0;
   out_8664355600254952032[64] = 0;
   out_8664355600254952032[65] = 0;
   out_8664355600254952032[66] = -0.5*state[4];
   out_8664355600254952032[67] = -0.5*state[5];
   out_8664355600254952032[68] = -0.5*state[6];
   out_8664355600254952032[69] = 0;
   out_8664355600254952032[70] = 0;
   out_8664355600254952032[71] = 0;
   out_8664355600254952032[72] = 0;
   out_8664355600254952032[73] = 0;
   out_8664355600254952032[74] = 0;
   out_8664355600254952032[75] = 0;
   out_8664355600254952032[76] = 0;
   out_8664355600254952032[77] = 0;
   out_8664355600254952032[78] = 0;
   out_8664355600254952032[79] = 0;
   out_8664355600254952032[80] = 0;
   out_8664355600254952032[81] = 0;
   out_8664355600254952032[82] = 0;
   out_8664355600254952032[83] = 0;
   out_8664355600254952032[84] = 0;
   out_8664355600254952032[85] = 0;
   out_8664355600254952032[86] = 0;
   out_8664355600254952032[87] = 0.5*state[3];
   out_8664355600254952032[88] = 0.5*state[6];
   out_8664355600254952032[89] = -0.5*state[5];
   out_8664355600254952032[90] = 0;
   out_8664355600254952032[91] = 0;
   out_8664355600254952032[92] = 0;
   out_8664355600254952032[93] = 0;
   out_8664355600254952032[94] = 0;
   out_8664355600254952032[95] = 0;
   out_8664355600254952032[96] = 0;
   out_8664355600254952032[97] = 0;
   out_8664355600254952032[98] = 0;
   out_8664355600254952032[99] = 0;
   out_8664355600254952032[100] = 0;
   out_8664355600254952032[101] = 0;
   out_8664355600254952032[102] = 0;
   out_8664355600254952032[103] = 0;
   out_8664355600254952032[104] = 0;
   out_8664355600254952032[105] = 0;
   out_8664355600254952032[106] = 0;
   out_8664355600254952032[107] = 0;
   out_8664355600254952032[108] = -0.5*state[6];
   out_8664355600254952032[109] = 0.5*state[3];
   out_8664355600254952032[110] = 0.5*state[4];
   out_8664355600254952032[111] = 0;
   out_8664355600254952032[112] = 0;
   out_8664355600254952032[113] = 0;
   out_8664355600254952032[114] = 0;
   out_8664355600254952032[115] = 0;
   out_8664355600254952032[116] = 0;
   out_8664355600254952032[117] = 0;
   out_8664355600254952032[118] = 0;
   out_8664355600254952032[119] = 0;
   out_8664355600254952032[120] = 0;
   out_8664355600254952032[121] = 0;
   out_8664355600254952032[122] = 0;
   out_8664355600254952032[123] = 0;
   out_8664355600254952032[124] = 0;
   out_8664355600254952032[125] = 0;
   out_8664355600254952032[126] = 0;
   out_8664355600254952032[127] = 0;
   out_8664355600254952032[128] = 0;
   out_8664355600254952032[129] = 0.5*state[5];
   out_8664355600254952032[130] = -0.5*state[4];
   out_8664355600254952032[131] = 0.5*state[3];
   out_8664355600254952032[132] = 0;
   out_8664355600254952032[133] = 0;
   out_8664355600254952032[134] = 0;
   out_8664355600254952032[135] = 0;
   out_8664355600254952032[136] = 0;
   out_8664355600254952032[137] = 0;
   out_8664355600254952032[138] = 0;
   out_8664355600254952032[139] = 0;
   out_8664355600254952032[140] = 0;
   out_8664355600254952032[141] = 0;
   out_8664355600254952032[142] = 0;
   out_8664355600254952032[143] = 0;
   out_8664355600254952032[144] = 0;
   out_8664355600254952032[145] = 0;
   out_8664355600254952032[146] = 0;
   out_8664355600254952032[147] = 0;
   out_8664355600254952032[148] = 0;
   out_8664355600254952032[149] = 0;
   out_8664355600254952032[150] = 0;
   out_8664355600254952032[151] = 0;
   out_8664355600254952032[152] = 0;
   out_8664355600254952032[153] = 1.0;
   out_8664355600254952032[154] = 0;
   out_8664355600254952032[155] = 0;
   out_8664355600254952032[156] = 0;
   out_8664355600254952032[157] = 0;
   out_8664355600254952032[158] = 0;
   out_8664355600254952032[159] = 0;
   out_8664355600254952032[160] = 0;
   out_8664355600254952032[161] = 0;
   out_8664355600254952032[162] = 0;
   out_8664355600254952032[163] = 0;
   out_8664355600254952032[164] = 0;
   out_8664355600254952032[165] = 0;
   out_8664355600254952032[166] = 0;
   out_8664355600254952032[167] = 0;
   out_8664355600254952032[168] = 0;
   out_8664355600254952032[169] = 0;
   out_8664355600254952032[170] = 0;
   out_8664355600254952032[171] = 0;
   out_8664355600254952032[172] = 0;
   out_8664355600254952032[173] = 0;
   out_8664355600254952032[174] = 0;
   out_8664355600254952032[175] = 1.0;
   out_8664355600254952032[176] = 0;
   out_8664355600254952032[177] = 0;
   out_8664355600254952032[178] = 0;
   out_8664355600254952032[179] = 0;
   out_8664355600254952032[180] = 0;
   out_8664355600254952032[181] = 0;
   out_8664355600254952032[182] = 0;
   out_8664355600254952032[183] = 0;
   out_8664355600254952032[184] = 0;
   out_8664355600254952032[185] = 0;
   out_8664355600254952032[186] = 0;
   out_8664355600254952032[187] = 0;
   out_8664355600254952032[188] = 0;
   out_8664355600254952032[189] = 0;
   out_8664355600254952032[190] = 0;
   out_8664355600254952032[191] = 0;
   out_8664355600254952032[192] = 0;
   out_8664355600254952032[193] = 0;
   out_8664355600254952032[194] = 0;
   out_8664355600254952032[195] = 0;
   out_8664355600254952032[196] = 0;
   out_8664355600254952032[197] = 1.0;
   out_8664355600254952032[198] = 0;
   out_8664355600254952032[199] = 0;
   out_8664355600254952032[200] = 0;
   out_8664355600254952032[201] = 0;
   out_8664355600254952032[202] = 0;
   out_8664355600254952032[203] = 0;
   out_8664355600254952032[204] = 0;
   out_8664355600254952032[205] = 0;
   out_8664355600254952032[206] = 0;
   out_8664355600254952032[207] = 0;
   out_8664355600254952032[208] = 0;
   out_8664355600254952032[209] = 0;
   out_8664355600254952032[210] = 0;
   out_8664355600254952032[211] = 0;
   out_8664355600254952032[212] = 0;
   out_8664355600254952032[213] = 0;
   out_8664355600254952032[214] = 0;
   out_8664355600254952032[215] = 0;
   out_8664355600254952032[216] = 0;
   out_8664355600254952032[217] = 0;
   out_8664355600254952032[218] = 0;
   out_8664355600254952032[219] = 1.0;
   out_8664355600254952032[220] = 0;
   out_8664355600254952032[221] = 0;
   out_8664355600254952032[222] = 0;
   out_8664355600254952032[223] = 0;
   out_8664355600254952032[224] = 0;
   out_8664355600254952032[225] = 0;
   out_8664355600254952032[226] = 0;
   out_8664355600254952032[227] = 0;
   out_8664355600254952032[228] = 0;
   out_8664355600254952032[229] = 0;
   out_8664355600254952032[230] = 0;
   out_8664355600254952032[231] = 0;
   out_8664355600254952032[232] = 0;
   out_8664355600254952032[233] = 0;
   out_8664355600254952032[234] = 0;
   out_8664355600254952032[235] = 0;
   out_8664355600254952032[236] = 0;
   out_8664355600254952032[237] = 0;
   out_8664355600254952032[238] = 0;
   out_8664355600254952032[239] = 0;
   out_8664355600254952032[240] = 0;
   out_8664355600254952032[241] = 1.0;
   out_8664355600254952032[242] = 0;
   out_8664355600254952032[243] = 0;
   out_8664355600254952032[244] = 0;
   out_8664355600254952032[245] = 0;
   out_8664355600254952032[246] = 0;
   out_8664355600254952032[247] = 0;
   out_8664355600254952032[248] = 0;
   out_8664355600254952032[249] = 0;
   out_8664355600254952032[250] = 0;
   out_8664355600254952032[251] = 0;
   out_8664355600254952032[252] = 0;
   out_8664355600254952032[253] = 0;
   out_8664355600254952032[254] = 0;
   out_8664355600254952032[255] = 0;
   out_8664355600254952032[256] = 0;
   out_8664355600254952032[257] = 0;
   out_8664355600254952032[258] = 0;
   out_8664355600254952032[259] = 0;
   out_8664355600254952032[260] = 0;
   out_8664355600254952032[261] = 0;
   out_8664355600254952032[262] = 0;
   out_8664355600254952032[263] = 1.0;
   out_8664355600254952032[264] = 0;
   out_8664355600254952032[265] = 0;
   out_8664355600254952032[266] = 0;
   out_8664355600254952032[267] = 0;
   out_8664355600254952032[268] = 0;
   out_8664355600254952032[269] = 0;
   out_8664355600254952032[270] = 0;
   out_8664355600254952032[271] = 0;
   out_8664355600254952032[272] = 0;
   out_8664355600254952032[273] = 0;
   out_8664355600254952032[274] = 0;
   out_8664355600254952032[275] = 0;
   out_8664355600254952032[276] = 0;
   out_8664355600254952032[277] = 0;
   out_8664355600254952032[278] = 0;
   out_8664355600254952032[279] = 0;
   out_8664355600254952032[280] = 0;
   out_8664355600254952032[281] = 0;
   out_8664355600254952032[282] = 0;
   out_8664355600254952032[283] = 0;
   out_8664355600254952032[284] = 0;
   out_8664355600254952032[285] = 1.0;
   out_8664355600254952032[286] = 0;
   out_8664355600254952032[287] = 0;
   out_8664355600254952032[288] = 0;
   out_8664355600254952032[289] = 0;
   out_8664355600254952032[290] = 0;
   out_8664355600254952032[291] = 0;
   out_8664355600254952032[292] = 0;
   out_8664355600254952032[293] = 0;
   out_8664355600254952032[294] = 0;
   out_8664355600254952032[295] = 0;
   out_8664355600254952032[296] = 0;
   out_8664355600254952032[297] = 0;
   out_8664355600254952032[298] = 0;
   out_8664355600254952032[299] = 0;
   out_8664355600254952032[300] = 0;
   out_8664355600254952032[301] = 0;
   out_8664355600254952032[302] = 0;
   out_8664355600254952032[303] = 0;
   out_8664355600254952032[304] = 0;
   out_8664355600254952032[305] = 0;
   out_8664355600254952032[306] = 0;
   out_8664355600254952032[307] = 1.0;
   out_8664355600254952032[308] = 0;
   out_8664355600254952032[309] = 0;
   out_8664355600254952032[310] = 0;
   out_8664355600254952032[311] = 0;
   out_8664355600254952032[312] = 0;
   out_8664355600254952032[313] = 0;
   out_8664355600254952032[314] = 0;
   out_8664355600254952032[315] = 0;
   out_8664355600254952032[316] = 0;
   out_8664355600254952032[317] = 0;
   out_8664355600254952032[318] = 0;
   out_8664355600254952032[319] = 0;
   out_8664355600254952032[320] = 0;
   out_8664355600254952032[321] = 0;
   out_8664355600254952032[322] = 0;
   out_8664355600254952032[323] = 0;
   out_8664355600254952032[324] = 0;
   out_8664355600254952032[325] = 0;
   out_8664355600254952032[326] = 0;
   out_8664355600254952032[327] = 0;
   out_8664355600254952032[328] = 0;
   out_8664355600254952032[329] = 1.0;
   out_8664355600254952032[330] = 0;
   out_8664355600254952032[331] = 0;
   out_8664355600254952032[332] = 0;
   out_8664355600254952032[333] = 0;
   out_8664355600254952032[334] = 0;
   out_8664355600254952032[335] = 0;
   out_8664355600254952032[336] = 0;
   out_8664355600254952032[337] = 0;
   out_8664355600254952032[338] = 0;
   out_8664355600254952032[339] = 0;
   out_8664355600254952032[340] = 0;
   out_8664355600254952032[341] = 0;
   out_8664355600254952032[342] = 0;
   out_8664355600254952032[343] = 0;
   out_8664355600254952032[344] = 0;
   out_8664355600254952032[345] = 0;
   out_8664355600254952032[346] = 0;
   out_8664355600254952032[347] = 0;
   out_8664355600254952032[348] = 0;
   out_8664355600254952032[349] = 0;
   out_8664355600254952032[350] = 0;
   out_8664355600254952032[351] = 1.0;
   out_8664355600254952032[352] = 0;
   out_8664355600254952032[353] = 0;
   out_8664355600254952032[354] = 0;
   out_8664355600254952032[355] = 0;
   out_8664355600254952032[356] = 0;
   out_8664355600254952032[357] = 0;
   out_8664355600254952032[358] = 0;
   out_8664355600254952032[359] = 0;
   out_8664355600254952032[360] = 0;
   out_8664355600254952032[361] = 0;
   out_8664355600254952032[362] = 0;
   out_8664355600254952032[363] = 0;
   out_8664355600254952032[364] = 0;
   out_8664355600254952032[365] = 0;
   out_8664355600254952032[366] = 0;
   out_8664355600254952032[367] = 0;
   out_8664355600254952032[368] = 0;
   out_8664355600254952032[369] = 0;
   out_8664355600254952032[370] = 0;
   out_8664355600254952032[371] = 0;
   out_8664355600254952032[372] = 0;
   out_8664355600254952032[373] = 1.0;
   out_8664355600254952032[374] = 0;
   out_8664355600254952032[375] = 0;
   out_8664355600254952032[376] = 0;
   out_8664355600254952032[377] = 0;
   out_8664355600254952032[378] = 0;
   out_8664355600254952032[379] = 0;
   out_8664355600254952032[380] = 0;
   out_8664355600254952032[381] = 0;
   out_8664355600254952032[382] = 0;
   out_8664355600254952032[383] = 0;
   out_8664355600254952032[384] = 0;
   out_8664355600254952032[385] = 0;
   out_8664355600254952032[386] = 0;
   out_8664355600254952032[387] = 0;
   out_8664355600254952032[388] = 0;
   out_8664355600254952032[389] = 0;
   out_8664355600254952032[390] = 0;
   out_8664355600254952032[391] = 0;
   out_8664355600254952032[392] = 0;
   out_8664355600254952032[393] = 0;
   out_8664355600254952032[394] = 0;
   out_8664355600254952032[395] = 1.0;
   out_8664355600254952032[396] = 0;
   out_8664355600254952032[397] = 0;
   out_8664355600254952032[398] = 0;
   out_8664355600254952032[399] = 0;
   out_8664355600254952032[400] = 0;
   out_8664355600254952032[401] = 0;
   out_8664355600254952032[402] = 0;
   out_8664355600254952032[403] = 0;
   out_8664355600254952032[404] = 0;
   out_8664355600254952032[405] = 0;
   out_8664355600254952032[406] = 0;
   out_8664355600254952032[407] = 0;
   out_8664355600254952032[408] = 0;
   out_8664355600254952032[409] = 0;
   out_8664355600254952032[410] = 0;
   out_8664355600254952032[411] = 0;
   out_8664355600254952032[412] = 0;
   out_8664355600254952032[413] = 0;
   out_8664355600254952032[414] = 0;
   out_8664355600254952032[415] = 0;
   out_8664355600254952032[416] = 0;
   out_8664355600254952032[417] = 1.0;
   out_8664355600254952032[418] = 0;
   out_8664355600254952032[419] = 0;
   out_8664355600254952032[420] = 0;
   out_8664355600254952032[421] = 0;
   out_8664355600254952032[422] = 0;
   out_8664355600254952032[423] = 0;
   out_8664355600254952032[424] = 0;
   out_8664355600254952032[425] = 0;
   out_8664355600254952032[426] = 0;
   out_8664355600254952032[427] = 0;
   out_8664355600254952032[428] = 0;
   out_8664355600254952032[429] = 0;
   out_8664355600254952032[430] = 0;
   out_8664355600254952032[431] = 0;
   out_8664355600254952032[432] = 0;
   out_8664355600254952032[433] = 0;
   out_8664355600254952032[434] = 0;
   out_8664355600254952032[435] = 0;
   out_8664355600254952032[436] = 0;
   out_8664355600254952032[437] = 0;
   out_8664355600254952032[438] = 0;
   out_8664355600254952032[439] = 1.0;
   out_8664355600254952032[440] = 0;
   out_8664355600254952032[441] = 0;
   out_8664355600254952032[442] = 0;
   out_8664355600254952032[443] = 0;
   out_8664355600254952032[444] = 0;
   out_8664355600254952032[445] = 0;
   out_8664355600254952032[446] = 0;
   out_8664355600254952032[447] = 0;
   out_8664355600254952032[448] = 0;
   out_8664355600254952032[449] = 0;
   out_8664355600254952032[450] = 0;
   out_8664355600254952032[451] = 0;
   out_8664355600254952032[452] = 0;
   out_8664355600254952032[453] = 0;
   out_8664355600254952032[454] = 0;
   out_8664355600254952032[455] = 0;
   out_8664355600254952032[456] = 0;
   out_8664355600254952032[457] = 0;
   out_8664355600254952032[458] = 0;
   out_8664355600254952032[459] = 0;
   out_8664355600254952032[460] = 0;
   out_8664355600254952032[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5944879704050977948) {
   out_5944879704050977948[0] = dt*state[7] + state[0];
   out_5944879704050977948[1] = dt*state[8] + state[1];
   out_5944879704050977948[2] = dt*state[9] + state[2];
   out_5944879704050977948[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5944879704050977948[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5944879704050977948[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5944879704050977948[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5944879704050977948[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5944879704050977948[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5944879704050977948[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5944879704050977948[10] = state[10];
   out_5944879704050977948[11] = state[11];
   out_5944879704050977948[12] = state[12];
   out_5944879704050977948[13] = state[13];
   out_5944879704050977948[14] = state[14];
   out_5944879704050977948[15] = state[15];
   out_5944879704050977948[16] = state[16];
   out_5944879704050977948[17] = state[17];
   out_5944879704050977948[18] = state[18];
   out_5944879704050977948[19] = state[19];
   out_5944879704050977948[20] = state[20];
   out_5944879704050977948[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1511312995606333672) {
   out_1511312995606333672[0] = 1;
   out_1511312995606333672[1] = 0;
   out_1511312995606333672[2] = 0;
   out_1511312995606333672[3] = 0;
   out_1511312995606333672[4] = 0;
   out_1511312995606333672[5] = 0;
   out_1511312995606333672[6] = dt;
   out_1511312995606333672[7] = 0;
   out_1511312995606333672[8] = 0;
   out_1511312995606333672[9] = 0;
   out_1511312995606333672[10] = 0;
   out_1511312995606333672[11] = 0;
   out_1511312995606333672[12] = 0;
   out_1511312995606333672[13] = 0;
   out_1511312995606333672[14] = 0;
   out_1511312995606333672[15] = 0;
   out_1511312995606333672[16] = 0;
   out_1511312995606333672[17] = 0;
   out_1511312995606333672[18] = 0;
   out_1511312995606333672[19] = 0;
   out_1511312995606333672[20] = 0;
   out_1511312995606333672[21] = 0;
   out_1511312995606333672[22] = 1;
   out_1511312995606333672[23] = 0;
   out_1511312995606333672[24] = 0;
   out_1511312995606333672[25] = 0;
   out_1511312995606333672[26] = 0;
   out_1511312995606333672[27] = 0;
   out_1511312995606333672[28] = dt;
   out_1511312995606333672[29] = 0;
   out_1511312995606333672[30] = 0;
   out_1511312995606333672[31] = 0;
   out_1511312995606333672[32] = 0;
   out_1511312995606333672[33] = 0;
   out_1511312995606333672[34] = 0;
   out_1511312995606333672[35] = 0;
   out_1511312995606333672[36] = 0;
   out_1511312995606333672[37] = 0;
   out_1511312995606333672[38] = 0;
   out_1511312995606333672[39] = 0;
   out_1511312995606333672[40] = 0;
   out_1511312995606333672[41] = 0;
   out_1511312995606333672[42] = 0;
   out_1511312995606333672[43] = 0;
   out_1511312995606333672[44] = 1;
   out_1511312995606333672[45] = 0;
   out_1511312995606333672[46] = 0;
   out_1511312995606333672[47] = 0;
   out_1511312995606333672[48] = 0;
   out_1511312995606333672[49] = 0;
   out_1511312995606333672[50] = dt;
   out_1511312995606333672[51] = 0;
   out_1511312995606333672[52] = 0;
   out_1511312995606333672[53] = 0;
   out_1511312995606333672[54] = 0;
   out_1511312995606333672[55] = 0;
   out_1511312995606333672[56] = 0;
   out_1511312995606333672[57] = 0;
   out_1511312995606333672[58] = 0;
   out_1511312995606333672[59] = 0;
   out_1511312995606333672[60] = 0;
   out_1511312995606333672[61] = 0;
   out_1511312995606333672[62] = 0;
   out_1511312995606333672[63] = 0;
   out_1511312995606333672[64] = 0;
   out_1511312995606333672[65] = 0;
   out_1511312995606333672[66] = 1;
   out_1511312995606333672[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1511312995606333672[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1511312995606333672[69] = 0;
   out_1511312995606333672[70] = 0;
   out_1511312995606333672[71] = 0;
   out_1511312995606333672[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1511312995606333672[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1511312995606333672[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1511312995606333672[75] = 0;
   out_1511312995606333672[76] = 0;
   out_1511312995606333672[77] = 0;
   out_1511312995606333672[78] = 0;
   out_1511312995606333672[79] = 0;
   out_1511312995606333672[80] = 0;
   out_1511312995606333672[81] = 0;
   out_1511312995606333672[82] = 0;
   out_1511312995606333672[83] = 0;
   out_1511312995606333672[84] = 0;
   out_1511312995606333672[85] = 0;
   out_1511312995606333672[86] = 0;
   out_1511312995606333672[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1511312995606333672[88] = 1;
   out_1511312995606333672[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1511312995606333672[90] = 0;
   out_1511312995606333672[91] = 0;
   out_1511312995606333672[92] = 0;
   out_1511312995606333672[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1511312995606333672[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1511312995606333672[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1511312995606333672[96] = 0;
   out_1511312995606333672[97] = 0;
   out_1511312995606333672[98] = 0;
   out_1511312995606333672[99] = 0;
   out_1511312995606333672[100] = 0;
   out_1511312995606333672[101] = 0;
   out_1511312995606333672[102] = 0;
   out_1511312995606333672[103] = 0;
   out_1511312995606333672[104] = 0;
   out_1511312995606333672[105] = 0;
   out_1511312995606333672[106] = 0;
   out_1511312995606333672[107] = 0;
   out_1511312995606333672[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1511312995606333672[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1511312995606333672[110] = 1;
   out_1511312995606333672[111] = 0;
   out_1511312995606333672[112] = 0;
   out_1511312995606333672[113] = 0;
   out_1511312995606333672[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1511312995606333672[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1511312995606333672[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1511312995606333672[117] = 0;
   out_1511312995606333672[118] = 0;
   out_1511312995606333672[119] = 0;
   out_1511312995606333672[120] = 0;
   out_1511312995606333672[121] = 0;
   out_1511312995606333672[122] = 0;
   out_1511312995606333672[123] = 0;
   out_1511312995606333672[124] = 0;
   out_1511312995606333672[125] = 0;
   out_1511312995606333672[126] = 0;
   out_1511312995606333672[127] = 0;
   out_1511312995606333672[128] = 0;
   out_1511312995606333672[129] = 0;
   out_1511312995606333672[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1511312995606333672[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1511312995606333672[132] = 1;
   out_1511312995606333672[133] = 0;
   out_1511312995606333672[134] = 0;
   out_1511312995606333672[135] = 0;
   out_1511312995606333672[136] = 0;
   out_1511312995606333672[137] = 0;
   out_1511312995606333672[138] = 0;
   out_1511312995606333672[139] = 0;
   out_1511312995606333672[140] = 0;
   out_1511312995606333672[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1511312995606333672[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1511312995606333672[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1511312995606333672[144] = 0;
   out_1511312995606333672[145] = 0;
   out_1511312995606333672[146] = 0;
   out_1511312995606333672[147] = 0;
   out_1511312995606333672[148] = 0;
   out_1511312995606333672[149] = 0;
   out_1511312995606333672[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1511312995606333672[151] = 0;
   out_1511312995606333672[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1511312995606333672[153] = 0;
   out_1511312995606333672[154] = 1;
   out_1511312995606333672[155] = 0;
   out_1511312995606333672[156] = 0;
   out_1511312995606333672[157] = 0;
   out_1511312995606333672[158] = 0;
   out_1511312995606333672[159] = 0;
   out_1511312995606333672[160] = 0;
   out_1511312995606333672[161] = 0;
   out_1511312995606333672[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1511312995606333672[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1511312995606333672[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1511312995606333672[165] = 0;
   out_1511312995606333672[166] = 0;
   out_1511312995606333672[167] = 0;
   out_1511312995606333672[168] = 0;
   out_1511312995606333672[169] = 0;
   out_1511312995606333672[170] = 0;
   out_1511312995606333672[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1511312995606333672[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1511312995606333672[173] = 0;
   out_1511312995606333672[174] = 0;
   out_1511312995606333672[175] = 0;
   out_1511312995606333672[176] = 1;
   out_1511312995606333672[177] = 0;
   out_1511312995606333672[178] = 0;
   out_1511312995606333672[179] = 0;
   out_1511312995606333672[180] = 0;
   out_1511312995606333672[181] = 0;
   out_1511312995606333672[182] = 0;
   out_1511312995606333672[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1511312995606333672[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1511312995606333672[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1511312995606333672[186] = 0;
   out_1511312995606333672[187] = 0;
   out_1511312995606333672[188] = 0;
   out_1511312995606333672[189] = 0;
   out_1511312995606333672[190] = 0;
   out_1511312995606333672[191] = 0;
   out_1511312995606333672[192] = 0;
   out_1511312995606333672[193] = 0;
   out_1511312995606333672[194] = 0;
   out_1511312995606333672[195] = 0;
   out_1511312995606333672[196] = 0;
   out_1511312995606333672[197] = 0;
   out_1511312995606333672[198] = 1;
   out_1511312995606333672[199] = 0;
   out_1511312995606333672[200] = 0;
   out_1511312995606333672[201] = 0;
   out_1511312995606333672[202] = 0;
   out_1511312995606333672[203] = 0;
   out_1511312995606333672[204] = 0;
   out_1511312995606333672[205] = 0;
   out_1511312995606333672[206] = 0;
   out_1511312995606333672[207] = 0;
   out_1511312995606333672[208] = 0;
   out_1511312995606333672[209] = 0;
   out_1511312995606333672[210] = 0;
   out_1511312995606333672[211] = 0;
   out_1511312995606333672[212] = 0;
   out_1511312995606333672[213] = 0;
   out_1511312995606333672[214] = 0;
   out_1511312995606333672[215] = 0;
   out_1511312995606333672[216] = 0;
   out_1511312995606333672[217] = 0;
   out_1511312995606333672[218] = 0;
   out_1511312995606333672[219] = 0;
   out_1511312995606333672[220] = 1;
   out_1511312995606333672[221] = 0;
   out_1511312995606333672[222] = 0;
   out_1511312995606333672[223] = 0;
   out_1511312995606333672[224] = 0;
   out_1511312995606333672[225] = 0;
   out_1511312995606333672[226] = 0;
   out_1511312995606333672[227] = 0;
   out_1511312995606333672[228] = 0;
   out_1511312995606333672[229] = 0;
   out_1511312995606333672[230] = 0;
   out_1511312995606333672[231] = 0;
   out_1511312995606333672[232] = 0;
   out_1511312995606333672[233] = 0;
   out_1511312995606333672[234] = 0;
   out_1511312995606333672[235] = 0;
   out_1511312995606333672[236] = 0;
   out_1511312995606333672[237] = 0;
   out_1511312995606333672[238] = 0;
   out_1511312995606333672[239] = 0;
   out_1511312995606333672[240] = 0;
   out_1511312995606333672[241] = 0;
   out_1511312995606333672[242] = 1;
   out_1511312995606333672[243] = 0;
   out_1511312995606333672[244] = 0;
   out_1511312995606333672[245] = 0;
   out_1511312995606333672[246] = 0;
   out_1511312995606333672[247] = 0;
   out_1511312995606333672[248] = 0;
   out_1511312995606333672[249] = 0;
   out_1511312995606333672[250] = 0;
   out_1511312995606333672[251] = 0;
   out_1511312995606333672[252] = 0;
   out_1511312995606333672[253] = 0;
   out_1511312995606333672[254] = 0;
   out_1511312995606333672[255] = 0;
   out_1511312995606333672[256] = 0;
   out_1511312995606333672[257] = 0;
   out_1511312995606333672[258] = 0;
   out_1511312995606333672[259] = 0;
   out_1511312995606333672[260] = 0;
   out_1511312995606333672[261] = 0;
   out_1511312995606333672[262] = 0;
   out_1511312995606333672[263] = 0;
   out_1511312995606333672[264] = 1;
   out_1511312995606333672[265] = 0;
   out_1511312995606333672[266] = 0;
   out_1511312995606333672[267] = 0;
   out_1511312995606333672[268] = 0;
   out_1511312995606333672[269] = 0;
   out_1511312995606333672[270] = 0;
   out_1511312995606333672[271] = 0;
   out_1511312995606333672[272] = 0;
   out_1511312995606333672[273] = 0;
   out_1511312995606333672[274] = 0;
   out_1511312995606333672[275] = 0;
   out_1511312995606333672[276] = 0;
   out_1511312995606333672[277] = 0;
   out_1511312995606333672[278] = 0;
   out_1511312995606333672[279] = 0;
   out_1511312995606333672[280] = 0;
   out_1511312995606333672[281] = 0;
   out_1511312995606333672[282] = 0;
   out_1511312995606333672[283] = 0;
   out_1511312995606333672[284] = 0;
   out_1511312995606333672[285] = 0;
   out_1511312995606333672[286] = 1;
   out_1511312995606333672[287] = 0;
   out_1511312995606333672[288] = 0;
   out_1511312995606333672[289] = 0;
   out_1511312995606333672[290] = 0;
   out_1511312995606333672[291] = 0;
   out_1511312995606333672[292] = 0;
   out_1511312995606333672[293] = 0;
   out_1511312995606333672[294] = 0;
   out_1511312995606333672[295] = 0;
   out_1511312995606333672[296] = 0;
   out_1511312995606333672[297] = 0;
   out_1511312995606333672[298] = 0;
   out_1511312995606333672[299] = 0;
   out_1511312995606333672[300] = 0;
   out_1511312995606333672[301] = 0;
   out_1511312995606333672[302] = 0;
   out_1511312995606333672[303] = 0;
   out_1511312995606333672[304] = 0;
   out_1511312995606333672[305] = 0;
   out_1511312995606333672[306] = 0;
   out_1511312995606333672[307] = 0;
   out_1511312995606333672[308] = 1;
   out_1511312995606333672[309] = 0;
   out_1511312995606333672[310] = 0;
   out_1511312995606333672[311] = 0;
   out_1511312995606333672[312] = 0;
   out_1511312995606333672[313] = 0;
   out_1511312995606333672[314] = 0;
   out_1511312995606333672[315] = 0;
   out_1511312995606333672[316] = 0;
   out_1511312995606333672[317] = 0;
   out_1511312995606333672[318] = 0;
   out_1511312995606333672[319] = 0;
   out_1511312995606333672[320] = 0;
   out_1511312995606333672[321] = 0;
   out_1511312995606333672[322] = 0;
   out_1511312995606333672[323] = 0;
   out_1511312995606333672[324] = 0;
   out_1511312995606333672[325] = 0;
   out_1511312995606333672[326] = 0;
   out_1511312995606333672[327] = 0;
   out_1511312995606333672[328] = 0;
   out_1511312995606333672[329] = 0;
   out_1511312995606333672[330] = 1;
   out_1511312995606333672[331] = 0;
   out_1511312995606333672[332] = 0;
   out_1511312995606333672[333] = 0;
   out_1511312995606333672[334] = 0;
   out_1511312995606333672[335] = 0;
   out_1511312995606333672[336] = 0;
   out_1511312995606333672[337] = 0;
   out_1511312995606333672[338] = 0;
   out_1511312995606333672[339] = 0;
   out_1511312995606333672[340] = 0;
   out_1511312995606333672[341] = 0;
   out_1511312995606333672[342] = 0;
   out_1511312995606333672[343] = 0;
   out_1511312995606333672[344] = 0;
   out_1511312995606333672[345] = 0;
   out_1511312995606333672[346] = 0;
   out_1511312995606333672[347] = 0;
   out_1511312995606333672[348] = 0;
   out_1511312995606333672[349] = 0;
   out_1511312995606333672[350] = 0;
   out_1511312995606333672[351] = 0;
   out_1511312995606333672[352] = 1;
   out_1511312995606333672[353] = 0;
   out_1511312995606333672[354] = 0;
   out_1511312995606333672[355] = 0;
   out_1511312995606333672[356] = 0;
   out_1511312995606333672[357] = 0;
   out_1511312995606333672[358] = 0;
   out_1511312995606333672[359] = 0;
   out_1511312995606333672[360] = 0;
   out_1511312995606333672[361] = 0;
   out_1511312995606333672[362] = 0;
   out_1511312995606333672[363] = 0;
   out_1511312995606333672[364] = 0;
   out_1511312995606333672[365] = 0;
   out_1511312995606333672[366] = 0;
   out_1511312995606333672[367] = 0;
   out_1511312995606333672[368] = 0;
   out_1511312995606333672[369] = 0;
   out_1511312995606333672[370] = 0;
   out_1511312995606333672[371] = 0;
   out_1511312995606333672[372] = 0;
   out_1511312995606333672[373] = 0;
   out_1511312995606333672[374] = 1;
   out_1511312995606333672[375] = 0;
   out_1511312995606333672[376] = 0;
   out_1511312995606333672[377] = 0;
   out_1511312995606333672[378] = 0;
   out_1511312995606333672[379] = 0;
   out_1511312995606333672[380] = 0;
   out_1511312995606333672[381] = 0;
   out_1511312995606333672[382] = 0;
   out_1511312995606333672[383] = 0;
   out_1511312995606333672[384] = 0;
   out_1511312995606333672[385] = 0;
   out_1511312995606333672[386] = 0;
   out_1511312995606333672[387] = 0;
   out_1511312995606333672[388] = 0;
   out_1511312995606333672[389] = 0;
   out_1511312995606333672[390] = 0;
   out_1511312995606333672[391] = 0;
   out_1511312995606333672[392] = 0;
   out_1511312995606333672[393] = 0;
   out_1511312995606333672[394] = 0;
   out_1511312995606333672[395] = 0;
   out_1511312995606333672[396] = 1;
   out_1511312995606333672[397] = 0;
   out_1511312995606333672[398] = 0;
   out_1511312995606333672[399] = 0;
   out_1511312995606333672[400] = 0;
   out_1511312995606333672[401] = 0;
   out_1511312995606333672[402] = 0;
   out_1511312995606333672[403] = 0;
   out_1511312995606333672[404] = 0;
   out_1511312995606333672[405] = 0;
   out_1511312995606333672[406] = 0;
   out_1511312995606333672[407] = 0;
   out_1511312995606333672[408] = 0;
   out_1511312995606333672[409] = 0;
   out_1511312995606333672[410] = 0;
   out_1511312995606333672[411] = 0;
   out_1511312995606333672[412] = 0;
   out_1511312995606333672[413] = 0;
   out_1511312995606333672[414] = 0;
   out_1511312995606333672[415] = 0;
   out_1511312995606333672[416] = 0;
   out_1511312995606333672[417] = 0;
   out_1511312995606333672[418] = 1;
   out_1511312995606333672[419] = 0;
   out_1511312995606333672[420] = 0;
   out_1511312995606333672[421] = 0;
   out_1511312995606333672[422] = 0;
   out_1511312995606333672[423] = 0;
   out_1511312995606333672[424] = 0;
   out_1511312995606333672[425] = 0;
   out_1511312995606333672[426] = 0;
   out_1511312995606333672[427] = 0;
   out_1511312995606333672[428] = 0;
   out_1511312995606333672[429] = 0;
   out_1511312995606333672[430] = 0;
   out_1511312995606333672[431] = 0;
   out_1511312995606333672[432] = 0;
   out_1511312995606333672[433] = 0;
   out_1511312995606333672[434] = 0;
   out_1511312995606333672[435] = 0;
   out_1511312995606333672[436] = 0;
   out_1511312995606333672[437] = 0;
   out_1511312995606333672[438] = 0;
   out_1511312995606333672[439] = 0;
   out_1511312995606333672[440] = 1;
}
void h_4(double *state, double *unused, double *out_6748587584352144008) {
   out_6748587584352144008[0] = state[10] + state[13];
   out_6748587584352144008[1] = state[11] + state[14];
   out_6748587584352144008[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6619224273712010162) {
   out_6619224273712010162[0] = 0;
   out_6619224273712010162[1] = 0;
   out_6619224273712010162[2] = 0;
   out_6619224273712010162[3] = 0;
   out_6619224273712010162[4] = 0;
   out_6619224273712010162[5] = 0;
   out_6619224273712010162[6] = 0;
   out_6619224273712010162[7] = 0;
   out_6619224273712010162[8] = 0;
   out_6619224273712010162[9] = 0;
   out_6619224273712010162[10] = 1;
   out_6619224273712010162[11] = 0;
   out_6619224273712010162[12] = 0;
   out_6619224273712010162[13] = 1;
   out_6619224273712010162[14] = 0;
   out_6619224273712010162[15] = 0;
   out_6619224273712010162[16] = 0;
   out_6619224273712010162[17] = 0;
   out_6619224273712010162[18] = 0;
   out_6619224273712010162[19] = 0;
   out_6619224273712010162[20] = 0;
   out_6619224273712010162[21] = 0;
   out_6619224273712010162[22] = 0;
   out_6619224273712010162[23] = 0;
   out_6619224273712010162[24] = 0;
   out_6619224273712010162[25] = 0;
   out_6619224273712010162[26] = 0;
   out_6619224273712010162[27] = 0;
   out_6619224273712010162[28] = 0;
   out_6619224273712010162[29] = 0;
   out_6619224273712010162[30] = 0;
   out_6619224273712010162[31] = 0;
   out_6619224273712010162[32] = 0;
   out_6619224273712010162[33] = 1;
   out_6619224273712010162[34] = 0;
   out_6619224273712010162[35] = 0;
   out_6619224273712010162[36] = 1;
   out_6619224273712010162[37] = 0;
   out_6619224273712010162[38] = 0;
   out_6619224273712010162[39] = 0;
   out_6619224273712010162[40] = 0;
   out_6619224273712010162[41] = 0;
   out_6619224273712010162[42] = 0;
   out_6619224273712010162[43] = 0;
   out_6619224273712010162[44] = 0;
   out_6619224273712010162[45] = 0;
   out_6619224273712010162[46] = 0;
   out_6619224273712010162[47] = 0;
   out_6619224273712010162[48] = 0;
   out_6619224273712010162[49] = 0;
   out_6619224273712010162[50] = 0;
   out_6619224273712010162[51] = 0;
   out_6619224273712010162[52] = 0;
   out_6619224273712010162[53] = 0;
   out_6619224273712010162[54] = 0;
   out_6619224273712010162[55] = 0;
   out_6619224273712010162[56] = 1;
   out_6619224273712010162[57] = 0;
   out_6619224273712010162[58] = 0;
   out_6619224273712010162[59] = 1;
   out_6619224273712010162[60] = 0;
   out_6619224273712010162[61] = 0;
   out_6619224273712010162[62] = 0;
   out_6619224273712010162[63] = 0;
   out_6619224273712010162[64] = 0;
   out_6619224273712010162[65] = 0;
}
void h_9(double *state, double *unused, double *out_8367559596262948470) {
   out_8367559596262948470[0] = state[10];
   out_8367559596262948470[1] = state[11];
   out_8367559596262948470[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6860413920341600807) {
   out_6860413920341600807[0] = 0;
   out_6860413920341600807[1] = 0;
   out_6860413920341600807[2] = 0;
   out_6860413920341600807[3] = 0;
   out_6860413920341600807[4] = 0;
   out_6860413920341600807[5] = 0;
   out_6860413920341600807[6] = 0;
   out_6860413920341600807[7] = 0;
   out_6860413920341600807[8] = 0;
   out_6860413920341600807[9] = 0;
   out_6860413920341600807[10] = 1;
   out_6860413920341600807[11] = 0;
   out_6860413920341600807[12] = 0;
   out_6860413920341600807[13] = 0;
   out_6860413920341600807[14] = 0;
   out_6860413920341600807[15] = 0;
   out_6860413920341600807[16] = 0;
   out_6860413920341600807[17] = 0;
   out_6860413920341600807[18] = 0;
   out_6860413920341600807[19] = 0;
   out_6860413920341600807[20] = 0;
   out_6860413920341600807[21] = 0;
   out_6860413920341600807[22] = 0;
   out_6860413920341600807[23] = 0;
   out_6860413920341600807[24] = 0;
   out_6860413920341600807[25] = 0;
   out_6860413920341600807[26] = 0;
   out_6860413920341600807[27] = 0;
   out_6860413920341600807[28] = 0;
   out_6860413920341600807[29] = 0;
   out_6860413920341600807[30] = 0;
   out_6860413920341600807[31] = 0;
   out_6860413920341600807[32] = 0;
   out_6860413920341600807[33] = 1;
   out_6860413920341600807[34] = 0;
   out_6860413920341600807[35] = 0;
   out_6860413920341600807[36] = 0;
   out_6860413920341600807[37] = 0;
   out_6860413920341600807[38] = 0;
   out_6860413920341600807[39] = 0;
   out_6860413920341600807[40] = 0;
   out_6860413920341600807[41] = 0;
   out_6860413920341600807[42] = 0;
   out_6860413920341600807[43] = 0;
   out_6860413920341600807[44] = 0;
   out_6860413920341600807[45] = 0;
   out_6860413920341600807[46] = 0;
   out_6860413920341600807[47] = 0;
   out_6860413920341600807[48] = 0;
   out_6860413920341600807[49] = 0;
   out_6860413920341600807[50] = 0;
   out_6860413920341600807[51] = 0;
   out_6860413920341600807[52] = 0;
   out_6860413920341600807[53] = 0;
   out_6860413920341600807[54] = 0;
   out_6860413920341600807[55] = 0;
   out_6860413920341600807[56] = 1;
   out_6860413920341600807[57] = 0;
   out_6860413920341600807[58] = 0;
   out_6860413920341600807[59] = 0;
   out_6860413920341600807[60] = 0;
   out_6860413920341600807[61] = 0;
   out_6860413920341600807[62] = 0;
   out_6860413920341600807[63] = 0;
   out_6860413920341600807[64] = 0;
   out_6860413920341600807[65] = 0;
}
void h_10(double *state, double *unused, double *out_9168195956800795275) {
   out_9168195956800795275[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_9168195956800795275[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_9168195956800795275[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1822418700523668742) {
   out_1822418700523668742[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1822418700523668742[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1822418700523668742[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1822418700523668742[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1822418700523668742[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1822418700523668742[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1822418700523668742[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1822418700523668742[7] = 0;
   out_1822418700523668742[8] = 0;
   out_1822418700523668742[9] = 0;
   out_1822418700523668742[10] = 0;
   out_1822418700523668742[11] = 0;
   out_1822418700523668742[12] = 0;
   out_1822418700523668742[13] = 0;
   out_1822418700523668742[14] = 0;
   out_1822418700523668742[15] = 0;
   out_1822418700523668742[16] = 1;
   out_1822418700523668742[17] = 0;
   out_1822418700523668742[18] = 0;
   out_1822418700523668742[19] = 1;
   out_1822418700523668742[20] = 0;
   out_1822418700523668742[21] = 0;
   out_1822418700523668742[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1822418700523668742[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1822418700523668742[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1822418700523668742[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1822418700523668742[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1822418700523668742[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1822418700523668742[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1822418700523668742[29] = 0;
   out_1822418700523668742[30] = 0;
   out_1822418700523668742[31] = 0;
   out_1822418700523668742[32] = 0;
   out_1822418700523668742[33] = 0;
   out_1822418700523668742[34] = 0;
   out_1822418700523668742[35] = 0;
   out_1822418700523668742[36] = 0;
   out_1822418700523668742[37] = 0;
   out_1822418700523668742[38] = 0;
   out_1822418700523668742[39] = 1;
   out_1822418700523668742[40] = 0;
   out_1822418700523668742[41] = 0;
   out_1822418700523668742[42] = 1;
   out_1822418700523668742[43] = 0;
   out_1822418700523668742[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1822418700523668742[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1822418700523668742[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1822418700523668742[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1822418700523668742[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1822418700523668742[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1822418700523668742[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1822418700523668742[51] = 0;
   out_1822418700523668742[52] = 0;
   out_1822418700523668742[53] = 0;
   out_1822418700523668742[54] = 0;
   out_1822418700523668742[55] = 0;
   out_1822418700523668742[56] = 0;
   out_1822418700523668742[57] = 0;
   out_1822418700523668742[58] = 0;
   out_1822418700523668742[59] = 0;
   out_1822418700523668742[60] = 0;
   out_1822418700523668742[61] = 0;
   out_1822418700523668742[62] = 1;
   out_1822418700523668742[63] = 0;
   out_1822418700523668742[64] = 0;
   out_1822418700523668742[65] = 1;
}
void h_12(double *state, double *unused, double *out_2333080179053030376) {
   out_2333080179053030376[0] = state[0];
   out_2333080179053030376[1] = state[1];
   out_2333080179053030376[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6808063391965579659) {
   out_6808063391965579659[0] = 1;
   out_6808063391965579659[1] = 0;
   out_6808063391965579659[2] = 0;
   out_6808063391965579659[3] = 0;
   out_6808063391965579659[4] = 0;
   out_6808063391965579659[5] = 0;
   out_6808063391965579659[6] = 0;
   out_6808063391965579659[7] = 0;
   out_6808063391965579659[8] = 0;
   out_6808063391965579659[9] = 0;
   out_6808063391965579659[10] = 0;
   out_6808063391965579659[11] = 0;
   out_6808063391965579659[12] = 0;
   out_6808063391965579659[13] = 0;
   out_6808063391965579659[14] = 0;
   out_6808063391965579659[15] = 0;
   out_6808063391965579659[16] = 0;
   out_6808063391965579659[17] = 0;
   out_6808063391965579659[18] = 0;
   out_6808063391965579659[19] = 0;
   out_6808063391965579659[20] = 0;
   out_6808063391965579659[21] = 0;
   out_6808063391965579659[22] = 0;
   out_6808063391965579659[23] = 1;
   out_6808063391965579659[24] = 0;
   out_6808063391965579659[25] = 0;
   out_6808063391965579659[26] = 0;
   out_6808063391965579659[27] = 0;
   out_6808063391965579659[28] = 0;
   out_6808063391965579659[29] = 0;
   out_6808063391965579659[30] = 0;
   out_6808063391965579659[31] = 0;
   out_6808063391965579659[32] = 0;
   out_6808063391965579659[33] = 0;
   out_6808063391965579659[34] = 0;
   out_6808063391965579659[35] = 0;
   out_6808063391965579659[36] = 0;
   out_6808063391965579659[37] = 0;
   out_6808063391965579659[38] = 0;
   out_6808063391965579659[39] = 0;
   out_6808063391965579659[40] = 0;
   out_6808063391965579659[41] = 0;
   out_6808063391965579659[42] = 0;
   out_6808063391965579659[43] = 0;
   out_6808063391965579659[44] = 0;
   out_6808063391965579659[45] = 0;
   out_6808063391965579659[46] = 1;
   out_6808063391965579659[47] = 0;
   out_6808063391965579659[48] = 0;
   out_6808063391965579659[49] = 0;
   out_6808063391965579659[50] = 0;
   out_6808063391965579659[51] = 0;
   out_6808063391965579659[52] = 0;
   out_6808063391965579659[53] = 0;
   out_6808063391965579659[54] = 0;
   out_6808063391965579659[55] = 0;
   out_6808063391965579659[56] = 0;
   out_6808063391965579659[57] = 0;
   out_6808063391965579659[58] = 0;
   out_6808063391965579659[59] = 0;
   out_6808063391965579659[60] = 0;
   out_6808063391965579659[61] = 0;
   out_6808063391965579659[62] = 0;
   out_6808063391965579659[63] = 0;
   out_6808063391965579659[64] = 0;
   out_6808063391965579659[65] = 0;
}
void h_35(double *state, double *unused, double *out_4784374292918501119) {
   out_4784374292918501119[0] = state[7];
   out_4784374292918501119[1] = state[8];
   out_4784374292918501119[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8460857742624934078) {
   out_8460857742624934078[0] = 0;
   out_8460857742624934078[1] = 0;
   out_8460857742624934078[2] = 0;
   out_8460857742624934078[3] = 0;
   out_8460857742624934078[4] = 0;
   out_8460857742624934078[5] = 0;
   out_8460857742624934078[6] = 0;
   out_8460857742624934078[7] = 1;
   out_8460857742624934078[8] = 0;
   out_8460857742624934078[9] = 0;
   out_8460857742624934078[10] = 0;
   out_8460857742624934078[11] = 0;
   out_8460857742624934078[12] = 0;
   out_8460857742624934078[13] = 0;
   out_8460857742624934078[14] = 0;
   out_8460857742624934078[15] = 0;
   out_8460857742624934078[16] = 0;
   out_8460857742624934078[17] = 0;
   out_8460857742624934078[18] = 0;
   out_8460857742624934078[19] = 0;
   out_8460857742624934078[20] = 0;
   out_8460857742624934078[21] = 0;
   out_8460857742624934078[22] = 0;
   out_8460857742624934078[23] = 0;
   out_8460857742624934078[24] = 0;
   out_8460857742624934078[25] = 0;
   out_8460857742624934078[26] = 0;
   out_8460857742624934078[27] = 0;
   out_8460857742624934078[28] = 0;
   out_8460857742624934078[29] = 0;
   out_8460857742624934078[30] = 1;
   out_8460857742624934078[31] = 0;
   out_8460857742624934078[32] = 0;
   out_8460857742624934078[33] = 0;
   out_8460857742624934078[34] = 0;
   out_8460857742624934078[35] = 0;
   out_8460857742624934078[36] = 0;
   out_8460857742624934078[37] = 0;
   out_8460857742624934078[38] = 0;
   out_8460857742624934078[39] = 0;
   out_8460857742624934078[40] = 0;
   out_8460857742624934078[41] = 0;
   out_8460857742624934078[42] = 0;
   out_8460857742624934078[43] = 0;
   out_8460857742624934078[44] = 0;
   out_8460857742624934078[45] = 0;
   out_8460857742624934078[46] = 0;
   out_8460857742624934078[47] = 0;
   out_8460857742624934078[48] = 0;
   out_8460857742624934078[49] = 0;
   out_8460857742624934078[50] = 0;
   out_8460857742624934078[51] = 0;
   out_8460857742624934078[52] = 0;
   out_8460857742624934078[53] = 1;
   out_8460857742624934078[54] = 0;
   out_8460857742624934078[55] = 0;
   out_8460857742624934078[56] = 0;
   out_8460857742624934078[57] = 0;
   out_8460857742624934078[58] = 0;
   out_8460857742624934078[59] = 0;
   out_8460857742624934078[60] = 0;
   out_8460857742624934078[61] = 0;
   out_8460857742624934078[62] = 0;
   out_8460857742624934078[63] = 0;
   out_8460857742624934078[64] = 0;
   out_8460857742624934078[65] = 0;
}
void h_32(double *state, double *unused, double *out_2752828006802561656) {
   out_2752828006802561656[0] = state[3];
   out_2752828006802561656[1] = state[4];
   out_2752828006802561656[2] = state[5];
   out_2752828006802561656[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8329692957684193609) {
   out_8329692957684193609[0] = 0;
   out_8329692957684193609[1] = 0;
   out_8329692957684193609[2] = 0;
   out_8329692957684193609[3] = 1;
   out_8329692957684193609[4] = 0;
   out_8329692957684193609[5] = 0;
   out_8329692957684193609[6] = 0;
   out_8329692957684193609[7] = 0;
   out_8329692957684193609[8] = 0;
   out_8329692957684193609[9] = 0;
   out_8329692957684193609[10] = 0;
   out_8329692957684193609[11] = 0;
   out_8329692957684193609[12] = 0;
   out_8329692957684193609[13] = 0;
   out_8329692957684193609[14] = 0;
   out_8329692957684193609[15] = 0;
   out_8329692957684193609[16] = 0;
   out_8329692957684193609[17] = 0;
   out_8329692957684193609[18] = 0;
   out_8329692957684193609[19] = 0;
   out_8329692957684193609[20] = 0;
   out_8329692957684193609[21] = 0;
   out_8329692957684193609[22] = 0;
   out_8329692957684193609[23] = 0;
   out_8329692957684193609[24] = 0;
   out_8329692957684193609[25] = 0;
   out_8329692957684193609[26] = 1;
   out_8329692957684193609[27] = 0;
   out_8329692957684193609[28] = 0;
   out_8329692957684193609[29] = 0;
   out_8329692957684193609[30] = 0;
   out_8329692957684193609[31] = 0;
   out_8329692957684193609[32] = 0;
   out_8329692957684193609[33] = 0;
   out_8329692957684193609[34] = 0;
   out_8329692957684193609[35] = 0;
   out_8329692957684193609[36] = 0;
   out_8329692957684193609[37] = 0;
   out_8329692957684193609[38] = 0;
   out_8329692957684193609[39] = 0;
   out_8329692957684193609[40] = 0;
   out_8329692957684193609[41] = 0;
   out_8329692957684193609[42] = 0;
   out_8329692957684193609[43] = 0;
   out_8329692957684193609[44] = 0;
   out_8329692957684193609[45] = 0;
   out_8329692957684193609[46] = 0;
   out_8329692957684193609[47] = 0;
   out_8329692957684193609[48] = 0;
   out_8329692957684193609[49] = 1;
   out_8329692957684193609[50] = 0;
   out_8329692957684193609[51] = 0;
   out_8329692957684193609[52] = 0;
   out_8329692957684193609[53] = 0;
   out_8329692957684193609[54] = 0;
   out_8329692957684193609[55] = 0;
   out_8329692957684193609[56] = 0;
   out_8329692957684193609[57] = 0;
   out_8329692957684193609[58] = 0;
   out_8329692957684193609[59] = 0;
   out_8329692957684193609[60] = 0;
   out_8329692957684193609[61] = 0;
   out_8329692957684193609[62] = 0;
   out_8329692957684193609[63] = 0;
   out_8329692957684193609[64] = 0;
   out_8329692957684193609[65] = 0;
   out_8329692957684193609[66] = 0;
   out_8329692957684193609[67] = 0;
   out_8329692957684193609[68] = 0;
   out_8329692957684193609[69] = 0;
   out_8329692957684193609[70] = 0;
   out_8329692957684193609[71] = 0;
   out_8329692957684193609[72] = 1;
   out_8329692957684193609[73] = 0;
   out_8329692957684193609[74] = 0;
   out_8329692957684193609[75] = 0;
   out_8329692957684193609[76] = 0;
   out_8329692957684193609[77] = 0;
   out_8329692957684193609[78] = 0;
   out_8329692957684193609[79] = 0;
   out_8329692957684193609[80] = 0;
   out_8329692957684193609[81] = 0;
   out_8329692957684193609[82] = 0;
   out_8329692957684193609[83] = 0;
   out_8329692957684193609[84] = 0;
   out_8329692957684193609[85] = 0;
   out_8329692957684193609[86] = 0;
   out_8329692957684193609[87] = 0;
}
void h_13(double *state, double *unused, double *out_392591640858112584) {
   out_392591640858112584[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_392591640858112584[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_392591640858112584[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4626093262240260019) {
   out_4626093262240260019[0] = 0;
   out_4626093262240260019[1] = 0;
   out_4626093262240260019[2] = 0;
   out_4626093262240260019[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4626093262240260019[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4626093262240260019[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4626093262240260019[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4626093262240260019[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4626093262240260019[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4626093262240260019[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4626093262240260019[10] = 0;
   out_4626093262240260019[11] = 0;
   out_4626093262240260019[12] = 0;
   out_4626093262240260019[13] = 0;
   out_4626093262240260019[14] = 0;
   out_4626093262240260019[15] = 0;
   out_4626093262240260019[16] = 0;
   out_4626093262240260019[17] = 0;
   out_4626093262240260019[18] = 0;
   out_4626093262240260019[19] = 0;
   out_4626093262240260019[20] = 0;
   out_4626093262240260019[21] = 0;
   out_4626093262240260019[22] = 0;
   out_4626093262240260019[23] = 0;
   out_4626093262240260019[24] = 0;
   out_4626093262240260019[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4626093262240260019[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4626093262240260019[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4626093262240260019[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4626093262240260019[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4626093262240260019[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4626093262240260019[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4626093262240260019[32] = 0;
   out_4626093262240260019[33] = 0;
   out_4626093262240260019[34] = 0;
   out_4626093262240260019[35] = 0;
   out_4626093262240260019[36] = 0;
   out_4626093262240260019[37] = 0;
   out_4626093262240260019[38] = 0;
   out_4626093262240260019[39] = 0;
   out_4626093262240260019[40] = 0;
   out_4626093262240260019[41] = 0;
   out_4626093262240260019[42] = 0;
   out_4626093262240260019[43] = 0;
   out_4626093262240260019[44] = 0;
   out_4626093262240260019[45] = 0;
   out_4626093262240260019[46] = 0;
   out_4626093262240260019[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4626093262240260019[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4626093262240260019[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4626093262240260019[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4626093262240260019[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4626093262240260019[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4626093262240260019[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4626093262240260019[54] = 0;
   out_4626093262240260019[55] = 0;
   out_4626093262240260019[56] = 0;
   out_4626093262240260019[57] = 0;
   out_4626093262240260019[58] = 0;
   out_4626093262240260019[59] = 0;
   out_4626093262240260019[60] = 0;
   out_4626093262240260019[61] = 0;
   out_4626093262240260019[62] = 0;
   out_4626093262240260019[63] = 0;
   out_4626093262240260019[64] = 0;
   out_4626093262240260019[65] = 0;
}
void h_14(double *state, double *unused, double *out_8367559596262948470) {
   out_8367559596262948470[0] = state[10];
   out_8367559596262948470[1] = state[11];
   out_8367559596262948470[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6860413920341600807) {
   out_6860413920341600807[0] = 0;
   out_6860413920341600807[1] = 0;
   out_6860413920341600807[2] = 0;
   out_6860413920341600807[3] = 0;
   out_6860413920341600807[4] = 0;
   out_6860413920341600807[5] = 0;
   out_6860413920341600807[6] = 0;
   out_6860413920341600807[7] = 0;
   out_6860413920341600807[8] = 0;
   out_6860413920341600807[9] = 0;
   out_6860413920341600807[10] = 1;
   out_6860413920341600807[11] = 0;
   out_6860413920341600807[12] = 0;
   out_6860413920341600807[13] = 0;
   out_6860413920341600807[14] = 0;
   out_6860413920341600807[15] = 0;
   out_6860413920341600807[16] = 0;
   out_6860413920341600807[17] = 0;
   out_6860413920341600807[18] = 0;
   out_6860413920341600807[19] = 0;
   out_6860413920341600807[20] = 0;
   out_6860413920341600807[21] = 0;
   out_6860413920341600807[22] = 0;
   out_6860413920341600807[23] = 0;
   out_6860413920341600807[24] = 0;
   out_6860413920341600807[25] = 0;
   out_6860413920341600807[26] = 0;
   out_6860413920341600807[27] = 0;
   out_6860413920341600807[28] = 0;
   out_6860413920341600807[29] = 0;
   out_6860413920341600807[30] = 0;
   out_6860413920341600807[31] = 0;
   out_6860413920341600807[32] = 0;
   out_6860413920341600807[33] = 1;
   out_6860413920341600807[34] = 0;
   out_6860413920341600807[35] = 0;
   out_6860413920341600807[36] = 0;
   out_6860413920341600807[37] = 0;
   out_6860413920341600807[38] = 0;
   out_6860413920341600807[39] = 0;
   out_6860413920341600807[40] = 0;
   out_6860413920341600807[41] = 0;
   out_6860413920341600807[42] = 0;
   out_6860413920341600807[43] = 0;
   out_6860413920341600807[44] = 0;
   out_6860413920341600807[45] = 0;
   out_6860413920341600807[46] = 0;
   out_6860413920341600807[47] = 0;
   out_6860413920341600807[48] = 0;
   out_6860413920341600807[49] = 0;
   out_6860413920341600807[50] = 0;
   out_6860413920341600807[51] = 0;
   out_6860413920341600807[52] = 0;
   out_6860413920341600807[53] = 0;
   out_6860413920341600807[54] = 0;
   out_6860413920341600807[55] = 0;
   out_6860413920341600807[56] = 1;
   out_6860413920341600807[57] = 0;
   out_6860413920341600807[58] = 0;
   out_6860413920341600807[59] = 0;
   out_6860413920341600807[60] = 0;
   out_6860413920341600807[61] = 0;
   out_6860413920341600807[62] = 0;
   out_6860413920341600807[63] = 0;
   out_6860413920341600807[64] = 0;
   out_6860413920341600807[65] = 0;
}
void h_33(double *state, double *unused, double *out_9004392775721978689) {
   out_9004392775721978689[0] = state[16];
   out_9004392775721978689[1] = state[17];
   out_9004392775721978689[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5310300737986076474) {
   out_5310300737986076474[0] = 0;
   out_5310300737986076474[1] = 0;
   out_5310300737986076474[2] = 0;
   out_5310300737986076474[3] = 0;
   out_5310300737986076474[4] = 0;
   out_5310300737986076474[5] = 0;
   out_5310300737986076474[6] = 0;
   out_5310300737986076474[7] = 0;
   out_5310300737986076474[8] = 0;
   out_5310300737986076474[9] = 0;
   out_5310300737986076474[10] = 0;
   out_5310300737986076474[11] = 0;
   out_5310300737986076474[12] = 0;
   out_5310300737986076474[13] = 0;
   out_5310300737986076474[14] = 0;
   out_5310300737986076474[15] = 0;
   out_5310300737986076474[16] = 1;
   out_5310300737986076474[17] = 0;
   out_5310300737986076474[18] = 0;
   out_5310300737986076474[19] = 0;
   out_5310300737986076474[20] = 0;
   out_5310300737986076474[21] = 0;
   out_5310300737986076474[22] = 0;
   out_5310300737986076474[23] = 0;
   out_5310300737986076474[24] = 0;
   out_5310300737986076474[25] = 0;
   out_5310300737986076474[26] = 0;
   out_5310300737986076474[27] = 0;
   out_5310300737986076474[28] = 0;
   out_5310300737986076474[29] = 0;
   out_5310300737986076474[30] = 0;
   out_5310300737986076474[31] = 0;
   out_5310300737986076474[32] = 0;
   out_5310300737986076474[33] = 0;
   out_5310300737986076474[34] = 0;
   out_5310300737986076474[35] = 0;
   out_5310300737986076474[36] = 0;
   out_5310300737986076474[37] = 0;
   out_5310300737986076474[38] = 0;
   out_5310300737986076474[39] = 1;
   out_5310300737986076474[40] = 0;
   out_5310300737986076474[41] = 0;
   out_5310300737986076474[42] = 0;
   out_5310300737986076474[43] = 0;
   out_5310300737986076474[44] = 0;
   out_5310300737986076474[45] = 0;
   out_5310300737986076474[46] = 0;
   out_5310300737986076474[47] = 0;
   out_5310300737986076474[48] = 0;
   out_5310300737986076474[49] = 0;
   out_5310300737986076474[50] = 0;
   out_5310300737986076474[51] = 0;
   out_5310300737986076474[52] = 0;
   out_5310300737986076474[53] = 0;
   out_5310300737986076474[54] = 0;
   out_5310300737986076474[55] = 0;
   out_5310300737986076474[56] = 0;
   out_5310300737986076474[57] = 0;
   out_5310300737986076474[58] = 0;
   out_5310300737986076474[59] = 0;
   out_5310300737986076474[60] = 0;
   out_5310300737986076474[61] = 0;
   out_5310300737986076474[62] = 1;
   out_5310300737986076474[63] = 0;
   out_5310300737986076474[64] = 0;
   out_5310300737986076474[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3693999405139314794) {
  H(in_vec, out_3693999405139314794);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3414598820419176679) {
  err_fun(nom_x, delta_x, out_3414598820419176679);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5364111469669926070) {
  inv_err_fun(nom_x, true_x, out_5364111469669926070);
}
void live_H_mod_fun(double *state, double *out_8664355600254952032) {
  H_mod_fun(state, out_8664355600254952032);
}
void live_f_fun(double *state, double dt, double *out_5944879704050977948) {
  f_fun(state,  dt, out_5944879704050977948);
}
void live_F_fun(double *state, double dt, double *out_1511312995606333672) {
  F_fun(state,  dt, out_1511312995606333672);
}
void live_h_4(double *state, double *unused, double *out_6748587584352144008) {
  h_4(state, unused, out_6748587584352144008);
}
void live_H_4(double *state, double *unused, double *out_6619224273712010162) {
  H_4(state, unused, out_6619224273712010162);
}
void live_h_9(double *state, double *unused, double *out_8367559596262948470) {
  h_9(state, unused, out_8367559596262948470);
}
void live_H_9(double *state, double *unused, double *out_6860413920341600807) {
  H_9(state, unused, out_6860413920341600807);
}
void live_h_10(double *state, double *unused, double *out_9168195956800795275) {
  h_10(state, unused, out_9168195956800795275);
}
void live_H_10(double *state, double *unused, double *out_1822418700523668742) {
  H_10(state, unused, out_1822418700523668742);
}
void live_h_12(double *state, double *unused, double *out_2333080179053030376) {
  h_12(state, unused, out_2333080179053030376);
}
void live_H_12(double *state, double *unused, double *out_6808063391965579659) {
  H_12(state, unused, out_6808063391965579659);
}
void live_h_35(double *state, double *unused, double *out_4784374292918501119) {
  h_35(state, unused, out_4784374292918501119);
}
void live_H_35(double *state, double *unused, double *out_8460857742624934078) {
  H_35(state, unused, out_8460857742624934078);
}
void live_h_32(double *state, double *unused, double *out_2752828006802561656) {
  h_32(state, unused, out_2752828006802561656);
}
void live_H_32(double *state, double *unused, double *out_8329692957684193609) {
  H_32(state, unused, out_8329692957684193609);
}
void live_h_13(double *state, double *unused, double *out_392591640858112584) {
  h_13(state, unused, out_392591640858112584);
}
void live_H_13(double *state, double *unused, double *out_4626093262240260019) {
  H_13(state, unused, out_4626093262240260019);
}
void live_h_14(double *state, double *unused, double *out_8367559596262948470) {
  h_14(state, unused, out_8367559596262948470);
}
void live_H_14(double *state, double *unused, double *out_6860413920341600807) {
  H_14(state, unused, out_6860413920341600807);
}
void live_h_33(double *state, double *unused, double *out_9004392775721978689) {
  h_33(state, unused, out_9004392775721978689);
}
void live_H_33(double *state, double *unused, double *out_5310300737986076474) {
  H_33(state, unused, out_5310300737986076474);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
